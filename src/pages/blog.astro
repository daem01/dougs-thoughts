---
import Base from '../layouts/Base.astro';
import BlogCard from '../components/BlogCard.astro';

const allPosts = await Object.entries(
  import.meta.glob('./posts/*.md', { eager: true })
);

let postsEvenIndex: any = [];
let postsOddIndex: any = [];

const filterPosts = function (posts: any) {
  for (let i = 0; i < posts.length; i++) {
    if (i % 2 === 0) {
      postsEvenIndex.push(posts[i]);
    } else {
      postsOddIndex.push(posts[i]);
    }
  }
};

filterPosts(allPosts.reverse());
---

<Base pageTitle="Blog">
  <!-- <div class="loading-screen">
    <label for="progress-bar">
      Loading... <progress class="progress-bar" value="50" max="100"
        >50%</progress
      >
    </label>
  </div> -->
  <div class="wrapper">
    <div class="container">
      <h1>Doug's Thoughts</h1>

      <div class="blog-posts">
        <div class="col__left">
          {
            postsEvenIndex.map((post: any) => (
              <BlogCard
                postUrl={post[1].url}
                postTitle={post[1].frontmatter.title}
                postAuthor={post[1].frontmatter.author}
                postDate={post[1].frontmatter.pubDate}
                postTags={post[1].frontmatter.tags}
                postDescription={post[1].frontmatter.description}
              />
            ))
          }
        </div>

        <div class="col__right">
          {
            postsOddIndex.map((post: any) => (
              <BlogCard
                postUrl={post[1].url}
                postTitle={post[1].frontmatter.title}
                postAuthor={post[1].frontmatter.author}
                postDate={post[1].frontmatter.pubDate}
                postTags={post[1].frontmatter.tags}
                postDescription={post[1].frontmatter.description}
              />
            ))
          }
        </div>
      </div>
    </div>
  </div>
</Base>

<style>
  .wrapper {
    width: 100%;
    min-height: 100%;
    box-shadow: inset 0 0 5rem 0 black;
    padding-inline: 2rem;
    background: linear-gradient(to right, #70809020 50%, #f0ffff20 50%);
    background-size: 1rem;
    background-repeat: repeat;
  }

  .container {
    max-width: 1500px;
    min-width: 320px;
    width: 100%;
    margin: 0 auto 2rem;
    padding: 2rem;
    display: flex;
    flex-direction: column;
    gap: 2rem;
    border-radius: 0 0 10px 10px;
    /* box-shadow: 4px 8px 12px 0 #00000077; */
    /* background-color: azure; */

    h1 {
      color: rgb(240, 230, 140);
    }
  }

  .blog-posts {
    display: flex;
    gap: 3rem;

    .col__left,
    .col__right {
      flex: 1;
      display: flex;
      flex-direction: column;
      opacity: 0;

      transition: opacity 350ms linear;

      gap: 3rem;
    }
  }
</style>

<script>
  const allPosts = await Object.entries(
    import.meta.glob('./posts/*.md', { eager: true })
  );

  // let tags = [];

  // allPosts.forEach(post => {
  //   const tagsString = String(post[1].frontmatter.tags);
  //   const tagsSplit = tagsString.split(',');
  //   const tagArr = Array.from(tagsSplit);

  //   tagArr.forEach(tag => {
  //     const obj = {
  //       params: { tag: `${tag}` },
  //       props: { posts: allPosts },
  //     };

  //     tags.push(obj);
  //   });
  // });

  // console.log(tags);

  const postsColumnLeft = document.querySelector('.col__left');
  const postsColumnRight = document.querySelector('.col__right');

  // const timing = performance.getEntriesByType('navigation')[0];
  // const percentage = Math.round(timing.loadEventEnd);

  document.addEventListener('DOMContentLoaded', function () {
    setTimeout(() => {
      postsColumnLeft?.animate(
        [
          {
            transform: 'translate(-100px, 0)',
            opacity: '0%',
          },
          {
            transform: 'translate(0, 0)',
            opacity: '100%',
          },
        ],
        {
          duration: 1000,
          easing: 'ease',
          fill: 'forwards',
        }
      );

      postsColumnRight?.animate(
        [
          {
            transform: 'translate(100px, 0)',
            opacity: '0%',
          },
          {
            transform: 'translate(0, 0)',
            opacity: '100%',
          },
        ],
        {
          duration: 1000,
          easing: 'ease',
          fill: 'forwards',
        }
      );
    }, 1000);
  });
</script>

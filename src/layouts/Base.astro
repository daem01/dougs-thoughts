---
import Nav from '../components/Nav.astro';
import Footer from '../components/Footer.astro';
const { pageTitle } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Hachi+Maru+Pop&family=Josefin+Sans:ital,wght@0,100..700;1,100..700&family=League+Script&family=Nothing+You+Could+Do&family=Quicksand:wght@300..700&family=Sarpanch:wght@400;500;600;700;800;900&family=Sriracha&display=swap"
      rel="stylesheet"
    />
    <title>Doug's Thoughts - {pageTitle}</title>
  </head>
  <body data-title={pageTitle}>
    <div class="wrapper">
      <header>
        <a href="#" class="header-icon__link" title="Portfolio">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="header-icon"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M2.25 7.125C2.25 6.504 2.754 6 3.375 6h6c.621 0 1.125.504 1.125 1.125v3.75c0 .621-.504 1.125-1.125 1.125h-6a1.125 1.125 0 0 1-1.125-1.125v-3.75ZM14.25 8.625c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v8.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 0 1-1.125-1.125v-8.25ZM3.75 16.125c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 0 1-1.125-1.125v-2.25Z"
            ></path>
          </svg>
        </a>

        <Nav />
      </header>
      <div class="container">
        <slot />
      </div>
      <Footer />
      <div class="tracker">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
          class="hidden tracker__svg"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="m4.5 19.5 15-15m0 0H8.25m11.25 0v11.25"></path>
        </svg>
      </div>
    </div>
  </body>
</html>

<style>
  body[data-title='Home'] {
    background-color: rgb(20, 20, 0);
  }

  body[data-title='Blog'] {
    background: linear-gradient(to right, rgb(20, 20, 0) 50%, black 50%);
    background-size: 1rem;
  }

  .wrapper {
    min-height: 100dvh;
    display: grid;
    grid-template-rows: auto 1fr;
  }

  .container {
    padding-inline: 2rem;
    margin-bottom: 2rem;
  }

  header {
    position: sticky;
    top: 0;
    left: 0;
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    height: 50px;
    padding-inline: 5rem;
    background-color: rgba(20, 20, 0, 0.75);
    backdrop-filter: blur(5px);
    box-shadow: 0 2px 10px 0 #00000088;
    z-index: 999;
  }
</style>

<style is:global>
  *,
  *::before,
  *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html {
    font-family: 'quicksand';
  }

  .header-icon {
    width: 2.5rem;
  }

  .header-icon__link {
    color: rgb(240, 230, 140);

    /* transition: color 150ms ease;

    &:hover {
      color: slategray;
    } */
  }

  .tracker {
    cursor: default;
    position: absolute;
    display: grid;
    place-content: center;
    width: 30px;
    aspect-ratio: 1;
    border-radius: 100vw;
    background-color: rgb(240, 230, 140);
    translate: -50% -50%;
    opacity: 90%;
    pointer-events: none;

    box-shadow:
      0 0 2rem 0 rgba(240, 230, 140, 1),
      2px 2px 8px 0 #00000055;

    .tracker__svg {
      width: 2rem;
    }
  }

  .hidden {
    display: none;
  }
</style>

<script>
  const container = document.querySelector('.container');
  const tracker = document.querySelector('.tracker');
  const trackerSVG = document.querySelector('.tracker__svg');
  const links = document.querySelectorAll('a');

  container?.addEventListener('mousemove', e => {
    tracker?.animate(
      {
        left: `${e.clientX + window.scrollX}px`,
        top: `${e.clientY + window.scrollY}px`,
      },
      {
        duration: 1000,
        easing: 'ease-in',
        fill: 'forwards',
      }
    );
  });

  links.forEach(link =>
    link.addEventListener('mouseover', () => {
      trackerSVG?.classList.remove('hidden');

      tracker?.animate(
        { width: '55px', opacity: '50%' },
        {
          duration: 150,
          easing: 'ease',
          fill: 'forwards',
        }
      );
    })
  );

  links.forEach(link =>
    link.addEventListener('mouseout', () => {
      trackerSVG?.classList.add('hidden');

      tracker?.animate(
        { width: '30px', opacity: '90%' },
        {
          duration: 150,
          easing: 'ease',
          fill: 'forwards',
        }
      );
    })
  );
</script>
